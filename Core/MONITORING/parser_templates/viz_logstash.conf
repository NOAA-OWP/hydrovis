input {
    beats {
        port => 5044
        ssl  => false
        type => "viz"
    }
}

filter {
    ###################
    # Message parsers #
    ###################
    if [type] == "viz" {
        mutate {
            remove_field => "name"
            remove_field => "tags"
            remove_field => "index_name"
            remove_field => "host"
            remove_field => "@version"
            remove_field => "input"
            remove_field => "ecs"
            remove_field => "event"
        }
    }
}

filter {

    ####################################
    # Process/Watcher/Pipeline Parsers #
    ####################################

    if [type] == "viz" {
        grok {
            match => {
                "[log][file][path]" =>  "logs\\%{WORD:pipeline_step}\\%{WORD:process}.log"
            }
        }
        
        grok {
            match => { "[log][file][path]" => "logs\\%{WORD:process}.log" }
            add_field => { "pipeline_step" => "Initializors" }
        }

        grok {
            match => {"[message]" => "%{GREEDYDATA:[logger_json][timestamp]}::.*::%{GREEDYDATA:[logger_json][level]}::"}
        }

        date {
            match => ["[logger_json][timestamp]", "yyyy-MM-dd HH:mm:ss,SSS"]
            target => "[logger_json][@timestamp]"
        }

        ######################
        # Pipeline heartbeat #
        ######################

        if [process] {
            grok {
                match => { "[message]" => "Heartbeat" }
                add_field => { "metric_type" => "process_heartbeat" }
            }
        }

        ##########################
        # Process/Watcher parser #
        ##########################

        grok {
            match => { "[message]" => "Process launched for %{TIMESTAMP_ISO8601:latest_data_time} by the %{GREEDYDATA:watcher} Watcher: %{GREEDYDATA:command}" }
            add_field => { "process_status_code" => 0 }
            add_field => { "watcher_status_code" => 7 }
            add_field => { "service_status_code" => 4 }
            add_field => { "metric_type" => ["process_status", "watcher_status"] }
        }

        grok {
            match => { "[message]" => "Process launched for %{TIMESTAMP_ISO8601:latest_data_time} by the %{GREEDYDATA:watcher} Watcher has exited" }
            add_field => { "process_status_code" => 8 }
            add_field => { "service_status_code" => 10 }
            add_field => { "metric_type" => "process_status" }
        }

        #######################
        # Process log parsers #
        #######################

        grok {
            match => { "[message]" => "Execute function called for %{TIMESTAMP_ISO8601:latest_data_time}[.]" }
            add_field => { "process_status_code" => 1 }
            add_field => { "metric_type" => "process_status" }
            add_tag => [ "processStarted" ]
        }

        grok {
            match => { "[message]" => "Validating workspace for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "process_status_code" => 2 }
            add_field => { "service_status_code" => 5 }
            add_field => { "metric_type" => "process_status" }
        }

        grok {
            match => { "[message]" => "Executing processing for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "process_status_code" => 3 }
            add_field => { "service_status_code" => 6 }
            add_field => { "metric_type" => "process_status" }
        }

        grok {
            match => { "[message]" => "Updating data for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "process_status_code" => 4 }
            add_field => { "service_status_code" => 7 }
            add_field => { "metric_type" => "process_status" }
        }

        grok {
            match => { "[message]" => "Updating portal item for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]"}
            add_field => { "process_status_code" => 5 }
            add_field => { "service_status_code" => 8 }
            add_field => { "metric_type" => "process_status" }
        }

        grok {
            match => { "[message]" => "Updating service properties for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "process_status_code" => 6 }
            add_field => { "service_status_code" => 9 }
            add_field => { "metric_type" => "process_status" }
        }

        grok {
            match => { "[message]" => "Successfully executed processing for %{TIMESTAMP_ISO8601:latest_data_time}[.]" }
            add_field => { "process_status_code" => 7 }
            add_field => { "metric_type" => "process_status" }
            add_field => { "metric_type" => "latest_process_time" }
            add_tag => [ "processFinished" ]
        }

        grok {
            match => { "[message]" => "Processing for %{TIMESTAMP_ISO8601:latest_data_time} failed" }
        }

        #######################
        # Watcher log parsers #
        #######################

        grok {
            match => { "[message]" => "A Watch for data corresponding to date %{TIMESTAMP_ISO8601:latest_data_time} will now begin." }
            add_field => { "metric_type" => "process_status" }
            add_field => { "service_status_code" => 0 }
        }

         grok {
            match => { "[message]" => "Sleeping for %{NUMBER} seconds until data is expected" }
            add_field => { "metric_type" => "process_status" }
            add_field => { "service_status_code" => 0 }
        }


        grok {
            match => { "[message]" => "Attempting to locate/fetch a batch of %{NUMBER} resources for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "metric_type" => "process_status" }
            add_field => { "service_status_code" => 1 }
        }

        grok {
            match => { "[message]" => "%{NUMBER:resources_fetched} of %{NUMBER:total_resources} resources for %{TIMESTAMP_ISO8601:latest_data_time} now available." }
            add_field => { "metric_type" => "download_progress" }
            add_field => { "service_status_code" => 2 }
        }

        grok {
            match => { "[message]" => "All resources for %{TIMESTAMP_ISO8601:latest_data_time} now available." }
            add_field => { "metric_type" => "process_status" }
            add_field => { "service_status_code" => 3 }
        }

        grok {
            match => { "[message]" => "Polling files for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "watcher_status_code" => 1 }
            add_field => { "metric_type" => "watcher_status" }
        }

        grok {
            match => { "[message]" => "One or more files available for %{TIMESTAMP_ISO8601:latest_data_time}[.]" }
            add_field => { "watcher_status_code" => 2 }
            add_field => { "metric_type" => "watcher_status" }
        }

        grok {
            match => { "[message]" => "Pulling one or more files for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "watcher_status_code" => 3 }
            add_field => { "metric_type" => "watcher_status" }
        }

        grok {
            match => { "[message]" => "All files available for %{TIMESTAMP_ISO8601:latest_data_time}[.]" }
            add_field => { "watcher_status_code" => 4 }
            add_field => { "metric_type" => "watcher_status" }
            add_field => { "metric_type" => "latest_available_time" }
        }

        grok {
            match => { "[message]" => "Pulling all files for %{TIMESTAMP_ISO8601:latest_data_time}[.][.][.]" }
            add_field => { "watcher_status_code" => 5 }
            add_field => { "metric_type" => "watcher_status" }
        }

        grok {
            match => { "[message]" => "Successfully pulled all files for %{TIMESTAMP_ISO8601:latest_data_time}[.]" }
            add_field => { "watcher_status_code" => 6 }
            add_field => { "metric_type" => "watcher_status" }
        }

        grok {
          match => { "[message]" => "The Watch for %{TIMESTAMP_ISO8601:latest_data_time} expired" }
        }

        grok {
          match => { "[message]" => "Process launched for %{TIMESTAMP_ISO8601:latest_data_time} exited with return code 1." }
        }

        #########################
        # Configuration parsers #
        #########################

        grok {
            break_on_match => false
            match => {
                "process" => "(?<configuration>\b\w{3})_"
                "watcher" => "(?<configuration>\b\w{3})_"
                "pipeline" => "(?<configuration>\b\w{3})_"
            }
        }

        if ![configuration] {
            mutate { add_field => { "configuration" => "xxx" } }
        }

        grok {
            match => { "[message]" => "%{NUMBER:total_processes} processes are expected to be running." }
            add_field => { "metric_type" => "total_processes" }
        }
    }
}

filter {
    #########################
    # Data type conversions #
    #########################
    if "[type]" == "viz" {
        mutate {
            convert => {
                "process_status_code" => "integer"
                "watcher_status_code" => "integer"
                "total_resources" => "integer"
                "resources_fetched" => "integer"
                "service_status_code" => "integer"
                "total_processes" => "integer"
            }
        }
    }
}

output {
    stdout {}
    if [type] == "viz" {
        amazon_es {
            hosts => ["${es_endpoint}"]
            region => "${region}"
            aws_access_key_id => ''
            aws_secret_access_key => ''
            index => "nwmviz-%%{+YYYY.MM}"
        }
    }
}