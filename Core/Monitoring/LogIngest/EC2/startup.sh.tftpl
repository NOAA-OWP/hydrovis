#!/bin/bash

# Install the OpenSearch specific version of Logstash that also includes the OpenSearch output plugin
cd /usr/share/
curl https://artifacts.opensearch.org/logstash/logstash-oss-with-opensearch-output-plugin-8.4.0-linux-x64.tar.gz -o logstash.tar.gz
tar -zxvf logstash.tar.gz


# Install other Logstash plugins
/usr/share/logstash-8.4.0/bin/logstash-plugin install logstash-filter-elapsed


# Create Service definition for Logstash... because the one that comes with it is wrong
cat > /etc/systemd/system/logstash.service << EOF
[Unit]
Description=Logstash Service.

[Service]
ExecStart=/bin/bash /usr/share/logstash-8.4.0/bin/logstash "--path.settings" "/usr/share/logstash-8.4.0/config"
Restart=always
WorkingDirectory=/
Nice=19
LimitNOFILE=16384

# When stopping, how long to wait before giving up and sending SIGKILL?
# Keep in mind that SIGKILL on a process can cause data loss.
TimeoutStopSec=infinity

[Install]
WantedBy=multi-user.target
EOF
systemctl daemon-reload


# Create a simple pipelines.yml.... because the one it comes with is blank
cat > /usr/share/logstash-8.4.0/config/pipelines.yml << EOF
# This file is where you define your pipelines. You can define multiple.
# For more information on multiple pipelines, see the documentation:
#   https://www.elastic.co/guide/en/logstash/current/multiple-pipelines.html

- pipeline.id: main
  path.config: "/usr/share/logstash-8.4.0/config/*.conf"
EOF


# Java params for Logstash
export LS_JAVA_OPTS="-Xms2g -Xmx2g -XX:ParallelGCThreads=1"


# Copy parsers to Logstash config folder and delete sample parser
cd /usr/share/logstash-8.4.0/config
cp /parsers/* .
rm logstash-sample.conf


# Download dashboard objects from S3 and import into OpenSearch Dashboards
aws s3 cp s3://${deployment_bucket}/${saved_objects_s3_key} saved_objects.ndjson

curl -XPOST -c dashboards_cookie https://${os_endpoint}/_dashboards/auth/login \
  -H "osd-xsrf: true" \
  -H "Content-Type: application/json" \
  -d '{"username":"${admin_username}","password":"${admin_password}"}'

curl -XPOST -b dashboards_cookie https://${os_endpoint}/_dashboards/api/saved_objects/_import?overwrite=true \
  -H "osd-xsrf: true" \
  --form file=@saved_objects.ndjson


# API calls for creating Dashboard users, roles, and assigning roles to the users
${dashboard_users_and_roles_creation_api_calls}


# Starting Logstash service
service logstash start
