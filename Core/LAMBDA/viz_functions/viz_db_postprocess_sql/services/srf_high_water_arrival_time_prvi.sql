DROP TABLE IF EXISTS PUBLISH.SRF_HIGH_WATER_ARRIVAL_TIME_PRVI;

WITH ARRIVAL_TIME AS
	(SELECT FORECASTS.FEATURE_ID,
			MIN(FORECASTS.FORECAST_HOUR) AS T_HIGH_WATER_THRESHOLD,
			CASE
							WHEN MAX(FORECASTS.FORECAST_HOUR) >= 48 THEN '> 48 hours'::text
							ELSE (MAX(FORECASTS.FORECAST_HOUR)+1)::text
			END AS T_NORMAL,
			CASE
							WHEN MAX(FORECASTS.FORECAST_HOUR) >= 48 THEN 'Outside SRF Forecast Window'::text
							ELSE ((MAX(FORECASTS.FORECAST_HOUR)+1) - MIN(FORECASTS.FORECAST_HOUR))::text
			END AS DURATION,
			THRESHOLDS.HIGH_WATER_THRESHOLD AS HIGH_WATER_THRESHOLD,
			ROUND((MAX(FORECASTS.STREAMFLOW) * 35.315::double precision)::numeric,
				2) AS MAX_FLOW
		FROM INGEST.NWM_CHANNEL_RT_SRF_PRVI FORECASTS
		JOIN DERIVED.RECURRENCE_FLOWS_PRVI THRESHOLDS ON FORECASTS.FEATURE_ID = THRESHOLDS.FEATURE_ID
		JOIN DERIVED.CHANNELS_PRVI GEO ON FORECASTS.FEATURE_ID = GEO.FEATURE_ID
		WHERE (THRESHOLDS.HIGH_WATER_THRESHOLD > 0::double precision
									OR THRESHOLDS.HIGH_WATER_THRESHOLD = '-10'::integer::double precision)
			AND (FORECASTS.STREAMFLOW * 35.315::double precision) >= THRESHOLDS.HIGH_WATER_THRESHOLD
		GROUP BY FORECASTS.FEATURE_ID,
			THRESHOLDS.HIGH_WATER_THRESHOLD)

SELECT CHANNELS.FEATURE_ID,
	CHANNELS.FEATURE_ID::TEXT AS FEATURE_ID_STR,
	NAME,
	CHANNELS.STRM_ORDER,
	HUC6,
	CHANNELS.NWM_VERS,
	to_char('1900-01-01 00:00:00'::timestamp without time zone, 'YYYY-MM-DD HH24:MI:SS UTC') AS reference_time,
	ARRIVAL_TIME.T_HIGH_WATER_THRESHOLD,
	ARRIVAL_TIME.T_NORMAL,
	ARRIVAL_TIME.DURATION,
	ARRIVAL_TIME.HIGH_WATER_THRESHOLD,
	ARRIVAL_TIME.MAX_FLOW,
	to_char(now()::timestamp without time zone, 'YYYY-MM-DD HH24:MI:SS UTC') AS update_time,
	CHANNELS.GEOM
INTO PUBLISH.SRF_HIGH_WATER_ARRIVAL_TIME_PRVI
FROM DERIVED.CHANNELS_PRVI CHANNELS
JOIN ARRIVAL_TIME ON CHANNELS.FEATURE_ID = ARRIVAL_TIME.FEATURE_ID;